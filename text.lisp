(defun commpress (x) 
    (do ((len (length x) (- len 1)))
        ((equal len 0) x)
        (if (listp (last x))
            (if (equal (car x) (nth 1 (last x)))
                (setf (nth 1 (last x)) (+ 1 (nth 1 (last x))) x (cdr x)))
                (if (equal (car x) (nth 1 x))
                    (setf x (cons (cdr x) (list (cons (car x) '1))))
                    (setf x (cons (cdr x) (car x)))
                )

            )
            (if (equal (car x) (nth 1 x))
                    (setf x (cons (cdr x) (list (cons (car x) '1))))
                    (setf x (cons (cdr x) (car x)))
                )
        )
    )   


(commpress '(1 0 0 0 1 1 1 2 0 1 1 ))